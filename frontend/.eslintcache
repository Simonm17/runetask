[{"C:\\Programming\\runetask\\frontend\\src\\components\\Register.js":"1","C:\\Programming\\runetask\\frontend\\src\\pages\\User.js":"2","C:\\Programming\\runetask\\frontend\\src\\App.js":"3","C:\\Programming\\runetask\\frontend\\src\\components\\Logout.js":"4","C:\\Programming\\runetask\\frontend\\src\\components\\DeleteTask.js":"5","C:\\Programming\\runetask\\frontend\\src\\components\\CreateTask.js":"6","C:\\Programming\\runetask\\frontend\\src\\components\\Login.js":"7","C:\\Programming\\runetask\\frontend\\src\\components\\CompleteTask.js":"8","C:\\Programming\\runetask\\frontend\\src\\components\\TwitchLogin.js":"9"},{"size":2782,"mtime":1609203370552,"results":"10","hashOfConfig":"11"},{"size":3859,"mtime":1609815154466,"results":"12","hashOfConfig":"11"},{"size":2197,"mtime":1609813597031,"results":"13","hashOfConfig":"11"},{"size":468,"mtime":1609813613003,"results":"14","hashOfConfig":"11"},{"size":908,"mtime":1608911475945,"results":"15","hashOfConfig":"11"},{"size":1386,"mtime":1608912333612,"results":"16","hashOfConfig":"11"},{"size":1823,"mtime":1609807733999,"results":"17","hashOfConfig":"11"},{"size":1077,"mtime":1608826532143,"results":"18","hashOfConfig":"11"},{"size":1245,"mtime":1609807580835,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ievu0z",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Programming\\runetask\\frontend\\src\\components\\Register.js",[],"C:\\Programming\\runetask\\frontend\\src\\pages\\User.js",["41","42"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport CreateTask from '../components/CreateTask';\r\nimport EditTask from '../components/EditTask';\r\nimport DeleteTask from '../components/DeleteTask';\r\nimport CompleteTask from '../components/CompleteTask';\r\n\r\n\r\nconst UserPage = ({ username, authUser }) => {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    const [taskUrls, setTaskUrls] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const [msg, setMsg] = useState('');\r\n    \r\n    function clearMsg(){\r\n        return setMsg('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (token !== null) {\r\n            setMsg('');\r\n        }\r\n    }, [authUser]);\r\n\r\n    // used for triggering getUserAPI() after CUD requests.\r\n    const [toggle, setToggle] = useState(true);\r\n    const triggerToggle = () => {\r\n        setToggle(!toggle);\r\n    }\r\n\r\n    // note: MAKE SURE USER IS AUTHENTICATED AND EQUALS OBJECT OWNER TO DISPLAY BUTTONS\r\n    // âœ“ button is a toggle; saves Task.completed field as true or false, indicated by regular or crossed-out text.\r\n    // x button is a toggle; it brings out the confirm & cancel buttons. Once clicked, x button disappears.\r\n    // confirm button triggers Task.delete() via post request.\r\n    // cancel button resets buttons and returns x button.\r\n\r\n    const getTaskInfo = tasks.map( task => {\r\n            if (token && authUser === username.match.params.user) {\r\n                return <li key={tasks.indexOf(task)}>\r\n                    <EditTask setMsg={setMsg} taskUrl={task.url} description={task.description} triggerToggle={triggerToggle}/> \r\n                    \r\n                    <CompleteTask taskUrl={task.url} taskStatus={task.completed} triggerToggle={triggerToggle}/><button>&times;</button>\r\n                    <DeleteTask setMsg={setMsg} taskUrl={task.url} triggerToggle={triggerToggle}/><button onClick={triggerToggle}>cancel</button>\r\n                </li> \r\n            }\r\n            else {\r\n                return <li key={tasks.indexOf(task)}>\r\n                    {task.description}\r\n                </li>\r\n            }\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getUserAPI = () => {\r\n            axios.get(`http://localhost:8000/users/` + username.match.params.user)\r\n            .then(res => {\r\n                setTaskUrls(res.data.tasks);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        };\r\n        getUserAPI();\r\n    }, [toggle]);\r\n\r\n    useEffect(() => {\r\n        // Initialize with empty array so array doesn't\r\n        // merge on top of already added states when using setTasks.\r\n        console.log(`UseEffect triggered by taskUrls.`);\r\n        setTasks([]);\r\n        for (let i = 0; i < taskUrls.length; i++){\r\n            axios.get(taskUrls[i])\r\n            .then( res => {\r\n                console.log('PRINTING:');\r\n                console.log(res.data);\r\n                setTasks(prevTask => [...prevTask, res.data]);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    // only triggered when change in returned urls array by GET for users list.\r\n    }, [taskUrls]);\r\n\r\n    return (\r\n        <div>\r\n            {token && authUser === username.match.params.user ? \r\n                <CreateTask setMsg={setMsg} triggerToggle={triggerToggle}/>\r\n                :\r\n                ''\r\n            }\r\n            <h1>{username.match.params.user}'s Profile</h1>\r\n            {msg? <p>{msg} <span onClick={clearMsg}>&times;</span></p> : ''}\r\n            {tasks.length > 0 ?\r\n                <ul> {getTaskInfo} </ul>\r\n                :\r\n                <p>{token ? 'You have no tasks! Click to add.' : 'No tasks added yet.'}</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage;","C:\\Programming\\runetask\\frontend\\src\\App.js",["43","44","45","46","47"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Login from './components/Login';\r\nimport TwitchLogin from './components/TwitchLogin';\r\nimport Logout from './components/Logout';\r\nimport UserPage from './pages/User';\r\nimport Register from './components/Register';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [token, setToken] = useState(null);\r\n  const [authUser, setAuthUser] = useState('');\r\n\r\n  const [message, setMessage] = useState([]);\r\n  const clearMsg = () => {\r\n    setMessage([]);\r\n  }\r\n  const displayMsg = message.map(msg => <li key={msg.indexOf(message)}>{msg}</li>)\r\n\r\n  const checkToken = () => {\r\n    setToken(localStorage.getItem('token'));\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(`triggering dj-rest-auth/user/ with token ${token}`);\r\n    const config = {\r\n      method: 'get',\r\n      url: 'http://localhost:8000/dj-rest-auth/user/',\r\n      headers: {\r\n          Authorization: 'Token ' + token \r\n      }\r\n  }\r\n    if (token) {\r\n      axios(config)\r\n      .then(res => setAuthUser(res.data.username))\r\n      .catch(err => {\r\n        console.log(err);\r\n        console.log(`ERR token: ${token}`);\r\n      });\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    console.log(`checkToken() triggered.`)\r\n    checkToken();\r\n  }, [token, message]);\r\n\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/twitch/:code\" render={locationProps => <TwitchLogin params={locationProps} setMessage={setMessage} setToken={setToken} />}/>\r\n      <nav>\r\n        {token ? \r\n          <Logout setToken={setToken} setMessage={setMessage} setAuthUser={setAuthUser} />\r\n          :\r\n          <Login setToken={setToken} setMessage={setMessage}/>\r\n        }\r\n      </nav>\r\n\r\n      {message.length > 0 ?\r\n        <ul>{displayMsg}<span onClick={clearMsg}>&times;</span></ul>\r\n        :\r\n        ''\r\n      }\r\n      <Switch>\r\n        <Route path=\"/users/:user\" render={routerProps => <UserPage username={routerProps} authUser={authUser}/>} />\r\n      </Switch>\r\n\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Programming\\runetask\\frontend\\src\\components\\Logout.js",[],"C:\\Programming\\runetask\\frontend\\src\\components\\DeleteTask.js",[],["48","49"],"C:\\Programming\\runetask\\frontend\\src\\components\\CreateTask.js",[],"C:\\Programming\\runetask\\frontend\\src\\components\\Login.js",["50","51","52","53"],"C:\\Programming\\runetask\\frontend\\src\\components\\CompleteTask.js",["54"],"C:\\Programming\\runetask\\frontend\\src\\components\\TwitchLogin.js",["55","56"],{"ruleId":"57","severity":1,"message":"58","line":27,"column":8,"nodeType":"59","endLine":27,"endColumn":18,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":69,"column":8,"nodeType":"59","endLine":69,"endColumn":16,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":6,"column":3,"nodeType":"65","messageId":"66","endLine":6,"endColumn":7},{"ruleId":"63","severity":1,"message":"67","line":7,"column":3,"nodeType":"65","messageId":"66","endLine":7,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":8,"column":3,"nodeType":"65","messageId":"66","endLine":8,"endColumn":12},{"ruleId":"63","severity":1,"message":"69","line":9,"column":3,"nodeType":"65","messageId":"66","endLine":9,"endColumn":14},{"ruleId":"63","severity":1,"message":"70","line":16,"column":8,"nodeType":"65","messageId":"66","endLine":16,"endColumn":16},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"63","severity":1,"message":"75","line":7,"column":22,"nodeType":"65","messageId":"66","endLine":7,"endColumn":33},{"ruleId":"63","severity":1,"message":"76","line":8,"column":22,"nodeType":"65","messageId":"66","endLine":8,"endColumn":33},{"ruleId":"63","severity":1,"message":"77","line":10,"column":11,"nodeType":"65","messageId":"66","endLine":10,"endColumn":28},{"ruleId":"63","severity":1,"message":"78","line":25,"column":17,"nodeType":"65","messageId":"66","endLine":25,"endColumn":25},{"ruleId":"63","severity":1,"message":"79","line":20,"column":11,"nodeType":"65","messageId":"66","endLine":20,"endColumn":22},{"ruleId":"63","severity":1,"message":"80","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"81","line":35,"column":8,"nodeType":"59","endLine":35,"endColumn":10,"suggestions":"82"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'username.match.params.user'. Either include it or remove the dependency array.",["84"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'useLocation' is defined but never used.","'Register' is defined but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'setUsername' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'handleLoginSubmit' is assigned a value but never used.","'authUser' is assigned a value but never used.","'buttonStyle' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'submitCode'. Either include it or remove the dependency array.",["87"],{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [authUser, token]",{"range":"94","text":"95"},"Update the dependencies array to be: [toggle, username.match.params.user]",{"range":"96","text":"97"},"Update the dependencies array to be: [submitCode]",{"range":"98","text":"99"},[702,712],"[authUser, token]",[2516,2524],"[toggle, username.match.params.user]",[1159,1161],"[submitCode]"]