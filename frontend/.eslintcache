[{"C:\\Programming\\runetask\\frontend\\src\\pages\\User.js":"1","C:\\Programming\\runetask\\frontend\\src\\components\\Logout.js":"2","C:\\Programming\\runetask\\frontend\\src\\components\\DeleteTask.js":"3","C:\\Programming\\runetask\\frontend\\src\\index.js":"4","C:\\Programming\\runetask\\frontend\\src\\components\\CompleteTask.js":"5"},{"size":2912,"mtime":1608825643881,"results":"6","hashOfConfig":"7"},{"size":458,"mtime":1608117880502,"results":"8","hashOfConfig":"7"},{"size":866,"mtime":1608824484788,"results":"9","hashOfConfig":"7"},{"size":500,"mtime":1606313686305,"results":"10","hashOfConfig":"7"},{"size":1077,"mtime":1608826532143,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"ievu0z",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Programming\\runetask\\frontend\\src\\pages\\User.js",["24"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport DeleteTask from '../components/DeleteTask';\r\nimport CompleteTask from '../components/CompleteTask';\r\n\r\nconst UserPage = ({ username }) => {\r\n\r\n    const [taskUrls, setTaskUrls] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n\r\n    // used for triggering getUserAPI() after CUD requests.\r\n    const [toggle, setToggle] = useState(true);\r\n    const triggerToggle = () => {\r\n        setToggle(!toggle);\r\n    }\r\n\r\n    // note: MAKE SURE USER IS AUTHENTICATED AND EQUALS OBJECT OWNER TO DISPLAY BUTTONS\r\n    // ✓ button is a toggle; saves Task.completed field as true or false, indicated by regular or crossed-out text.\r\n    // x button is a toggle; it brings out the confirm & cancel buttons. Once clicked, x button disappears.\r\n    // confirm button triggers Task.delete() via post request.\r\n    // cancel button resets buttons and returns x button.\r\n\r\n    const getTaskInfo = tasks.map( task => {\r\n            if (username) {\r\n                return <li key={tasks.indexOf(task)}>\r\n                    {task.description} \r\n                    \r\n                    <CompleteTask taskUrl={task.url} taskStatus={task.completed} triggerToggle={triggerToggle}/><button>&times;</button>\r\n                    <DeleteTask taskUrl={task.url} triggerToggle={triggerToggle}/><button onClick={triggerToggle}>cancel</button>\r\n                </li> \r\n            }\r\n            else {\r\n                return <li key={tasks.indexOf(task)}>\r\n                    {task.description}\r\n                </li>\r\n            }\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getUserAPI = () => {\r\n            axios.get(`http://localhost:8000/users/` + username)\r\n            .then(res => {\r\n                setTaskUrls(res.data.tasks);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        };\r\n        getUserAPI();\r\n    }, [toggle]);\r\n\r\n    useEffect(() => {\r\n        // Initialize with empty array so array doesn't\r\n        // merge on top of already added states when using setTasks.\r\n        setTasks([]);\r\n        for (let i = 0; i < taskUrls.length; i++){\r\n            axios.get(taskUrls[i])\r\n            .then( res => {\r\n                console.log('PRINTING:');\r\n                console.log(res.data);\r\n                setTasks(prevTask => [...prevTask, res.data]);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    // only triggered when change in returned urls array by GET for users list.\r\n    }, [taskUrls]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>{username}</h1>\r\n            {tasks.length > 0 ?\r\n                <ul> {getTaskInfo} </ul>\r\n                :\r\n                <p>You have no tasks! Click to add.</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage;","C:\\Programming\\runetask\\frontend\\src\\components\\Logout.js",[],"C:\\Programming\\runetask\\frontend\\src\\components\\DeleteTask.js",[],"C:\\Programming\\runetask\\frontend\\src\\index.js",[],"C:\\Programming\\runetask\\frontend\\src\\components\\CompleteTask.js",["25"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst CompleteTask = ({taskUrl, taskStatus, triggerToggle}) => {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    const config = {\r\n        method: 'put',\r\n        url: taskUrl,\r\n        headers: {\r\n            Authorization: 'Token ' + token \r\n        },\r\n        data: {\r\n            'completed': !taskStatus\r\n        }\r\n    }\r\n\r\n    const buttonStyle = {\r\n        textDecoration: 'line-through',\r\n    }\r\n\r\n    const handleComplete = () => {\r\n        return axios(config)\r\n            .then(res => {\r\n                console.log(JSON.stringify(res.data));\r\n                triggerToggle();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {taskStatus ? \r\n                <button style={{textDecoration: 'line-through'}} onClick={handleComplete}>✓</button>\r\n                :\r\n                <button onClick={handleComplete}>✓</button>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteTask;",{"ruleId":"26","severity":1,"message":"27","line":52,"column":8,"nodeType":"28","endLine":52,"endColumn":16,"suggestions":"29"},{"ruleId":"30","severity":1,"message":"31","line":20,"column":11,"nodeType":"32","messageId":"33","endLine":20,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["34"],"no-unused-vars","'buttonStyle' is assigned a value but never used.","Identifier","unusedVar",{"desc":"35","fix":"36"},"Update the dependencies array to be: [toggle, username]",{"range":"37","text":"38"},[1967,1975],"[toggle, username]"]