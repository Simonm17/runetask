[{"C:\\Programming\\runetask\\frontend\\src\\components\\Register.js":"1","C:\\Programming\\runetask\\frontend\\src\\pages\\User.js":"2","C:\\Programming\\runetask\\frontend\\src\\App.js":"3","C:\\Programming\\runetask\\frontend\\src\\components\\Logout.js":"4","C:\\Programming\\runetask\\frontend\\src\\components\\DeleteTask.js":"5","C:\\Programming\\runetask\\frontend\\src\\components\\CreateTask.js":"6","C:\\Programming\\runetask\\frontend\\src\\components\\Login.js":"7","C:\\Programming\\runetask\\frontend\\src\\components\\CompleteTask.js":"8","C:\\Programming\\runetask\\frontend\\src\\components\\TwitchLogin.js":"9","C:\\Programming\\runetask\\frontend\\src\\reportWebVitals.js":"10","C:\\Programming\\runetask\\frontend\\src\\components\\EditTask.js":"11"},{"size":2782,"mtime":1609203370552,"results":"12","hashOfConfig":"13"},{"size":3859,"mtime":1609815154466,"results":"14","hashOfConfig":"13"},{"size":2483,"mtime":1609873654270,"results":"15","hashOfConfig":"13"},{"size":468,"mtime":1609813613003,"results":"16","hashOfConfig":"13"},{"size":908,"mtime":1608911475945,"results":"17","hashOfConfig":"13"},{"size":1386,"mtime":1608912333612,"results":"18","hashOfConfig":"13"},{"size":1823,"mtime":1609807733999,"results":"19","hashOfConfig":"13"},{"size":1077,"mtime":1608826532143,"results":"20","hashOfConfig":"13"},{"size":1245,"mtime":1609807580835,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":1606313686305,"results":"22","hashOfConfig":"13"},{"size":1323,"mtime":1608912463112,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ievu0z",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Programming\\runetask\\frontend\\src\\components\\Register.js",[],"C:\\Programming\\runetask\\frontend\\src\\pages\\User.js",["48","49"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport CreateTask from '../components/CreateTask';\r\nimport EditTask from '../components/EditTask';\r\nimport DeleteTask from '../components/DeleteTask';\r\nimport CompleteTask from '../components/CompleteTask';\r\n\r\n\r\nconst UserPage = ({ username, authUser }) => {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    const [taskUrls, setTaskUrls] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const [msg, setMsg] = useState('');\r\n    \r\n    function clearMsg(){\r\n        return setMsg('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (token !== null) {\r\n            setMsg('');\r\n        }\r\n    }, [authUser]);\r\n\r\n    // used for triggering getUserAPI() after CUD requests.\r\n    const [toggle, setToggle] = useState(true);\r\n    const triggerToggle = () => {\r\n        setToggle(!toggle);\r\n    }\r\n\r\n    // note: MAKE SURE USER IS AUTHENTICATED AND EQUALS OBJECT OWNER TO DISPLAY BUTTONS\r\n    // âœ“ button is a toggle; saves Task.completed field as true or false, indicated by regular or crossed-out text.\r\n    // x button is a toggle; it brings out the confirm & cancel buttons. Once clicked, x button disappears.\r\n    // confirm button triggers Task.delete() via post request.\r\n    // cancel button resets buttons and returns x button.\r\n\r\n    const getTaskInfo = tasks.map( task => {\r\n            if (token && authUser === username.match.params.user) {\r\n                return <li key={tasks.indexOf(task)}>\r\n                    <EditTask setMsg={setMsg} taskUrl={task.url} description={task.description} triggerToggle={triggerToggle}/> \r\n                    \r\n                    <CompleteTask taskUrl={task.url} taskStatus={task.completed} triggerToggle={triggerToggle}/><button>&times;</button>\r\n                    <DeleteTask setMsg={setMsg} taskUrl={task.url} triggerToggle={triggerToggle}/><button onClick={triggerToggle}>cancel</button>\r\n                </li> \r\n            }\r\n            else {\r\n                return <li key={tasks.indexOf(task)}>\r\n                    {task.description}\r\n                </li>\r\n            }\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getUserAPI = () => {\r\n            axios.get(`http://localhost:8000/users/` + username.match.params.user)\r\n            .then(res => {\r\n                setTaskUrls(res.data.tasks);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        };\r\n        getUserAPI();\r\n    }, [toggle]);\r\n\r\n    useEffect(() => {\r\n        // Initialize with empty array so array doesn't\r\n        // merge on top of already added states when using setTasks.\r\n        console.log(`UseEffect triggered by taskUrls.`);\r\n        setTasks([]);\r\n        for (let i = 0; i < taskUrls.length; i++){\r\n            axios.get(taskUrls[i])\r\n            .then( res => {\r\n                console.log('PRINTING:');\r\n                console.log(res.data);\r\n                setTasks(prevTask => [...prevTask, res.data]);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    // only triggered when change in returned urls array by GET for users list.\r\n    }, [taskUrls]);\r\n\r\n    return (\r\n        <div>\r\n            {token && authUser === username.match.params.user ? \r\n                <CreateTask setMsg={setMsg} triggerToggle={triggerToggle}/>\r\n                :\r\n                ''\r\n            }\r\n            <h1>{username.match.params.user}'s Profile</h1>\r\n            {msg? <p>{msg} <span onClick={clearMsg}>&times;</span></p> : ''}\r\n            {tasks.length > 0 ?\r\n                <ul> {getTaskInfo} </ul>\r\n                :\r\n                <p>{token ? 'You have no tasks! Click to add.' : 'No tasks added yet.'}</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage;","C:\\Programming\\runetask\\frontend\\src\\App.js",["50","51","52","53"],"C:\\Programming\\runetask\\frontend\\src\\components\\Logout.js",[],"C:\\Programming\\runetask\\frontend\\src\\components\\DeleteTask.js",[],["54","55"],"C:\\Programming\\runetask\\frontend\\src\\components\\CreateTask.js",[],"C:\\Programming\\runetask\\frontend\\src\\components\\Login.js",["56","57","58","59"],"C:\\Programming\\runetask\\frontend\\src\\components\\CompleteTask.js",["60"],"C:\\Programming\\runetask\\frontend\\src\\components\\TwitchLogin.js",["61","62"],"C:\\Programming\\runetask\\frontend\\src\\reportWebVitals.js",[],"C:\\Programming\\runetask\\frontend\\src\\components\\EditTask.js",["63"],{"ruleId":"64","severity":1,"message":"65","line":27,"column":8,"nodeType":"66","endLine":27,"endColumn":18,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":69,"column":8,"nodeType":"66","endLine":69,"endColumn":16,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":3,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"70","severity":1,"message":"74","line":8,"column":3,"nodeType":"72","messageId":"73","endLine":8,"endColumn":12},{"ruleId":"70","severity":1,"message":"75","line":9,"column":3,"nodeType":"72","messageId":"73","endLine":9,"endColumn":14},{"ruleId":"70","severity":1,"message":"76","line":16,"column":8,"nodeType":"72","messageId":"73","endLine":16,"endColumn":16},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"70","severity":1,"message":"81","line":7,"column":22,"nodeType":"72","messageId":"73","endLine":7,"endColumn":33},{"ruleId":"70","severity":1,"message":"82","line":8,"column":22,"nodeType":"72","messageId":"73","endLine":8,"endColumn":33},{"ruleId":"70","severity":1,"message":"83","line":10,"column":11,"nodeType":"72","messageId":"73","endLine":10,"endColumn":28},{"ruleId":"70","severity":1,"message":"84","line":25,"column":17,"nodeType":"72","messageId":"73","endLine":25,"endColumn":25},{"ruleId":"70","severity":1,"message":"85","line":20,"column":11,"nodeType":"72","messageId":"73","endLine":20,"endColumn":22},{"ruleId":"70","severity":1,"message":"86","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"87","line":35,"column":8,"nodeType":"66","endLine":35,"endColumn":10,"suggestions":"88"},{"ruleId":"70","severity":1,"message":"89","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["90"],"React Hook useEffect has a missing dependency: 'username.match.params.user'. Either include it or remove the dependency array.",["91"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useLocation' is defined but never used.","'Register' is defined but never used.","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'setUsername' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'handleLoginSubmit' is assigned a value but never used.","'authUser' is assigned a value but never used.","'buttonStyle' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'submitCode'. Either include it or remove the dependency array.",["94"],"'useEffect' is defined but never used.",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [authUser, token]",{"range":"101","text":"102"},"Update the dependencies array to be: [toggle, username.match.params.user]",{"range":"103","text":"104"},"Update the dependencies array to be: [submitCode]",{"range":"105","text":"106"},[702,712],"[authUser, token]",[2516,2524],"[toggle, username.match.params.user]",[1159,1161],"[submitCode]"]